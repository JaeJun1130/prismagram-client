[{"C:\\React\\prismagram-client\\src\\index.js":"1","C:\\React\\prismagram-client\\src\\Apollo\\Client.js":"2","C:\\React\\prismagram-client\\src\\Components\\App.js":"3","C:\\React\\prismagram-client\\src\\Components\\Footer.js":"4","C:\\React\\prismagram-client\\src\\Components\\Header.js":"5","C:\\React\\prismagram-client\\src\\Styles\\GlobalStyles.js":"6","C:\\React\\prismagram-client\\src\\Styles\\Theme.js":"7","C:\\React\\prismagram-client\\src\\Components\\Input.js":"8","C:\\React\\prismagram-client\\src\\Components\\Icons.js":"9","C:\\React\\prismagram-client\\src\\Routes\\Feed\\index.js":"10","C:\\React\\prismagram-client\\src\\Routes\\Auth\\index.js":"11","C:\\React\\prismagram-client\\src\\Routes\\Feed\\FeedContainer.js":"12","C:\\React\\prismagram-client\\src\\Routes\\Auth\\AuthContainer.js":"13","C:\\React\\prismagram-client\\src\\Routes\\Feed\\FeedPresenter.js":"14","C:\\React\\prismagram-client\\src\\Routes\\Auth\\AuthPresenter.js":"15","C:\\React\\prismagram-client\\src\\Routes\\Auth\\AuthMutation.js":"16","C:\\React\\prismagram-client\\src\\Components\\Button.js":"17","C:\\React\\prismagram-client\\src\\Components\\Logo.js":"18","C:\\React\\prismagram-client\\src\\Components\\Routers.js":"19","C:\\React\\prismagram-client\\src\\Routes\\Explore\\index.js":"20","C:\\React\\prismagram-client\\src\\Routes\\Explore\\ExploreContainer.js":"21","C:\\React\\prismagram-client\\src\\Routes\\Explore\\ExplorePresenter.js":"22","C:\\React\\prismagram-client\\src\\Routes\\Profile\\index.js":"23","C:\\React\\prismagram-client\\src\\Routes\\Profile\\ProfilePresenter.js":"24","C:\\React\\prismagram-client\\src\\Routes\\Search\\index.js":"25","C:\\React\\prismagram-client\\src\\Routes\\Search\\SearchContainer.js":"26","C:\\React\\prismagram-client\\src\\Routes\\Search\\SearchPresenter.js":"27"},{"size":337,"mtime":1609909775198,"results":"28","hashOfConfig":"29"},{"size":585,"mtime":1610430950308,"results":"30","hashOfConfig":"29"},{"size":1437,"mtime":1610428101305,"results":"31","hashOfConfig":"29"},{"size":2012,"mtime":1609909775163,"results":"32","hashOfConfig":"29"},{"size":3027,"mtime":1610432153595,"results":"33","hashOfConfig":"29"},{"size":758,"mtime":1610427554134,"results":"34","hashOfConfig":"29"},{"size":546,"mtime":1610427554139,"results":"35","hashOfConfig":"29"},{"size":782,"mtime":1610427554119,"results":"36","hashOfConfig":"29"},{"size":4447,"mtime":1610428469545,"results":"37","hashOfConfig":"29"},{"size":79,"mtime":1609909775189,"results":"38","hashOfConfig":"29"},{"size":79,"mtime":1609909775175,"results":"39","hashOfConfig":"29"},{"size":175,"mtime":1609909775187,"results":"40","hashOfConfig":"29"},{"size":5186,"mtime":1610427554124,"results":"41","hashOfConfig":"29"},{"size":174,"mtime":1610427554131,"results":"42","hashOfConfig":"29"},{"size":5876,"mtime":1610427554128,"results":"43","hashOfConfig":"29"},{"size":694,"mtime":1610427554126,"results":"44","hashOfConfig":"29"},{"size":505,"mtime":1609995573687,"results":"45","hashOfConfig":"29"},{"size":386,"mtime":1609912431592,"results":"46","hashOfConfig":"29"},{"size":923,"mtime":1610430215511,"results":"47","hashOfConfig":"29"},{"size":88,"mtime":1610428558321,"results":"48","hashOfConfig":"29"},{"size":190,"mtime":1609909775181,"results":"49","hashOfConfig":"29"},{"size":136,"mtime":1609909775183,"results":"50","hashOfConfig":"29"},{"size":88,"mtime":1610428717763,"results":"51","hashOfConfig":"29"},{"size":134,"mtime":1610428695644,"results":"52","hashOfConfig":"29"},{"size":85,"mtime":1610429069207,"results":"53","hashOfConfig":"29"},{"size":183,"mtime":1610429079692,"results":"54","hashOfConfig":"29"},{"size":131,"mtime":1610429088243,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eq23p2",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\React\\prismagram-client\\src\\index.js",[],"C:\\React\\prismagram-client\\src\\Apollo\\Client.js",[],"C:\\React\\prismagram-client\\src\\Components\\App.js",[],"C:\\React\\prismagram-client\\src\\Components\\Footer.js",[],"C:\\React\\prismagram-client\\src\\Components\\Header.js",[],"C:\\React\\prismagram-client\\src\\Styles\\GlobalStyles.js",[],"C:\\React\\prismagram-client\\src\\Styles\\Theme.js",[],"C:\\React\\prismagram-client\\src\\Components\\Input.js",[],"C:\\React\\prismagram-client\\src\\Components\\Icons.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Feed\\index.js",[],["112","113"],"C:\\React\\prismagram-client\\src\\Routes\\Auth\\index.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Feed\\FeedContainer.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Auth\\AuthContainer.js",["114"],"import React, { useState } from \"react\";\r\nimport AuthPresenter from \"./AuthPresenter\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { CONFIRM_SECERT, CREATE_ACCOUNT, LOG_IN } from \"./AuthMutation\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const LOGIN = \"LOGIN\";\r\nexport const JOIN = \"JOIN\";\r\nexport const SECRET = \"SECRET\";\r\n\r\nconst AuthContainer = () => {\r\n    //폼\r\n    const [action, setAction] = useState(LOGIN);\r\n    //로그인\r\n    const [userData, setUserData] = useState({\r\n        email: \"\",\r\n    });\r\n    //회원가입\r\n    const [joinData, setJoinData] = useState({\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n    });\r\n    const [userSecret, setUserSecret] = useState({\r\n        secret: \"\",\r\n    });\r\n\r\n    //로그인 gql\r\n    const [requestSecretMutation] = useMutation(LOG_IN, {\r\n        variables: {\r\n            email: userData.email,\r\n        },\r\n    });\r\n    //회원가입 gql\r\n    const [createAccountMutation] = useMutation(CREATE_ACCOUNT, {\r\n        variables: {\r\n            username: joinData.username,\r\n            firstName: joinData.firstName,\r\n            lastName: joinData.lastName,\r\n            email: joinData.email,\r\n        },\r\n    });\r\n    //시크릿 gql\r\n    const [confirmSecretMutation] = useMutation(CONFIRM_SECERT, {\r\n        variables: {\r\n            email: userData.email,\r\n            secret: userSecret.secret,\r\n        },\r\n    });\r\n\r\n    //서버통신\r\n    const onSubmit = async (e, form) => {\r\n        const a = userData.email.includes(\"@\");\r\n        const aa = joinData.email.includes(\"@\");\r\n        console.log(e, form);\r\n        e.preventDefault();\r\n\r\n        switch (form) {\r\n            //로그인\r\n            case LOGIN:\r\n                if (userData.email !== \"\") {\r\n                    try {\r\n                        const {\r\n                            data: { requestSecret },\r\n                        } = await requestSecretMutation();\r\n                        if (!requestSecret || !a) {\r\n                            toast.error(\"이메일을 다시 확인하세요\");\r\n                        } else if (requestSecret && a) {\r\n                            toast.success(\"메일이 전송 되었습니다.\");\r\n                            setTimeout(() => {\r\n                                setAction(SECRET);\r\n                            }, 2000);\r\n                        }\r\n                    } catch {\r\n                        toast.error(\"지금은 로그인 할 수 없습니다\");\r\n                    }\r\n                } else {\r\n                    toast.error(\"이메일을 입력하세요\");\r\n                }\r\n                break;\r\n\r\n            //회원가입\r\n            case JOIN: {\r\n                if (\r\n                    joinData.email !== \"\" &&\r\n                    joinData.firstName !== \"\" &&\r\n                    joinData.username !== \"\" &&\r\n                    joinData.lastName\r\n                ) {\r\n                    try {\r\n                        const {\r\n                            data: { createAccount },\r\n                        } = await createAccountMutation();\r\n                        if (!createAccount || !aa) {\r\n                            toast.error(\"회원정보를 다시 입력하세요\");\r\n                        } else if (createAccount && aa) {\r\n                            toast.success(\"회원가입 완료\");\r\n                        }\r\n                    } catch {\r\n                        toast.error(\"회원가입을 할 수 없습니다, 다시 시도하세요\");\r\n                    }\r\n                } else {\r\n                    toast.error(\"모든항목을 입력하세요\");\r\n                }\r\n\r\n                break;\r\n            }\r\n            case SECRET: {\r\n                if (userSecret.secert !== \"\") {\r\n                    try {\r\n                        const {\r\n                            data: { confirmSecret: token },\r\n                        } = await confirmSecretMutation();\r\n                        console.log(token);\r\n\r\n                        if (token) {\r\n                            localStorage.setItem(\"token\", token);\r\n                            window.location.reload();\r\n                        } else {\r\n                            console.log(\"실패\");\r\n                            localStorage.removeItem(\"token\");\r\n                        }\r\n                    } catch {\r\n                        toast.error(\"암호가 일치하지 않습니다\");\r\n                        localStorage.removeItem(\"token\");\r\n                    }\r\n                } else {\r\n                    toast.error(\"암호를 입력하세요\");\r\n                    localStorage.removeItem(\"token\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthPresenter\r\n            action={action}\r\n            setAction={setAction}\r\n            userData={userData}\r\n            setUserData={setUserData}\r\n            joinData={joinData}\r\n            setJoinData={setJoinData}\r\n            onSubmit={onSubmit}\r\n            userSecret={userSecret}\r\n            setUserSecret={setUserSecret}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AuthContainer;\r\n","C:\\React\\prismagram-client\\src\\Routes\\Feed\\FeedPresenter.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Auth\\AuthPresenter.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Auth\\AuthMutation.js",[],"C:\\React\\prismagram-client\\src\\Components\\Button.js",[],"C:\\React\\prismagram-client\\src\\Components\\Logo.js",[],"C:\\React\\prismagram-client\\src\\Components\\Routers.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Explore\\index.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Explore\\ExploreContainer.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Explore\\ExplorePresenter.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Profile\\index.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Profile\\ProfilePresenter.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Search\\index.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Search\\SearchContainer.js",[],"C:\\React\\prismagram-client\\src\\Routes\\Search\\SearchPresenter.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":60,"column":9,"nodeType":"121","messageId":"122","endLine":134,"endColumn":10},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]